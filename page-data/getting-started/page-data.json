{"componentChunkName":"component---src-layout-default-tsx","path":"/getting-started/","result":{"data":{"mdx":{"id":"9e990c36-eeab-5896-88fc-a19c926d7bee","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Installation\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Add NPM Package\"), mdx(\"p\", null, \"To add Looker UI Components to your project, add the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/@looker/components\"\n  }), \"NPM package\"), \" to your project:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"# Looker projects generally utilize Yarn (https://yarnpkg.com/)\\nyarn add @looker/components styled-components react react-dom\\n\\n# If you prefer you can of course also use NPM directly:\\nnpm install @looker/components styled-components\\n\")), mdx(\"h3\", null, \"Using Typescript?\"), mdx(\"p\", null, \"If you're using Typescript you'll also need to add the type definitions for Styled Components.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"yarn add --dev @types/styled-components @types/react @types/react-dom\\n\")), mdx(\"p\", null, \"Unfortunately, due to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33311\"\n  }), \"this issue with the type definitions for Styled Components\"), \" you'll need to apply a minor workaround if you're using ESLint along with Styled Component's Typescript definitions.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"rm -R node_modules/@types/react-native\\necho '@types/react-native' > .yarnclean\\n\")), mdx(\"h2\", null, \"Setup\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@looker/components\"), \" expects two prerequisites to exist for the complete styling to be applied:\"), mdx(\"h3\", null, \"GlobalStyle\"), mdx(\"p\", null, \"At the top-most level of the usage of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@looker/components\"), \" you need to load the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<GlobalStyle />\"), \" component. This will inject a simple CSS reset as well as basic font assignment. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/utilities/globalstyle\"\n  }), \"GlobalStyle documentation \", \"\\u2192\")), mdx(\"p\", null, \"NOTE: The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ComponentsProvider\"), \" will automatically load the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GlobalStyle\"), \" component for you.\"), mdx(\"h3\", null, \"Web Font Loading\"), mdx(\"p\", null, \"Users may not have the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@looker/components\"), \" default font, Open Sans, installed on their computers so we recommend importing the font to ensure that content is rendered with the proper font-face.\"), mdx(\"p\", null, \"The simplest way to accomplish this is via Google's hosted CDN:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"<link\\n  href=\\\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&display=swap\\\"\\n  rel=\\\"stylesheet\\\"\\n/>\\n\")), mdx(\"h2\", null, \"Using a Component\"), mdx(\"p\", null, \"Now that we have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@looker/components\"), \" installed we can start using them in our application. To get things started import some components:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }), \"import { Card, ComponentsProvider, theme } from '@looker/components'\\n\\n<ComponentsProvider>\\n  <Card>{Source here...}</Card>\\n</ComponentsProvider>\\n\")), mdx(\"p\", null, \"Which could be used to render the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Card raised>\\n  <CardContent>\\n    <Heading fontWeight=\\\"semiBold\\\" textTransform=\\\"capitalize\\\">\\n      Welcome to Looker Components\\n    </Heading>\\n    <Text>Looker's component library</Text>\\n  </CardContent>\\n</Card>\\n\")), mdx(\"p\", null, \"Try editing the code above, you should see the changes appear live.\"), mdx(\"p\", null, \"These live editing blocks are found throughout our style guide documentation, providing a space for rapid experimentation with components.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Installation"},"tableOfContents":{"items":[{"url":"#add-npm-package","title":"Add NPM Package","items":[{"url":"#using-typescript","title":"Using Typescript?"}]},{"url":"#setup","title":"Setup","items":[{"url":"#globalstyle","title":"GlobalStyle"},{"url":"#web-font-loading","title":"Web Font Loading"}]},{"url":"#using-a-component","title":"Using a Component"}]}}},"pageContext":{"id":"9e990c36-eeab-5896-88fc-a19c926d7bee"}}}