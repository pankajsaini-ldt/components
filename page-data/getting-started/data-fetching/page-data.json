{"componentChunkName":"component---src-layout-default-tsx","path":"/getting-started/data-fetching/","result":{"data":{"mdx":{"id":"a6400ea5-7cf5-592d-8e63-bdb71d2a3b39","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Data Fetching\",\n  \"status\": \"experimental\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Banner, {\n    intent: \"warning\",\n    mdxType: \"Banner\"\n  }, \"This is experimental and only works for local development. Data fetching in production environments will be supported in early 2020.\"), mdx(\"p\", null, \"In the course of developing data experiences on the Looker platform, you will find it useful to fetch production data in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/looker-open-source/components/tree/master/packages/playground/README.md\"\n  }), \"lens development playground\"), \". To facilitate that, we've set up a local proxy server which will forward api requests to any target looker instance you have permissions to view.\"), mdx(\"h2\", null, \"Proxy Configuration\"), mdx(\"p\", null, \"Instructions for configuring and starting the lens proxy can be found on our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/looker-open-source/components/tree/master/packages/server/README.md\"\n  }), \"packages/Server README\"), \".\"), mdx(\"p\", null, \"To validate that the proxy server is configured correctly it's helpful to query the authenticated user, which can be tested with the following example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \";() => {\\n  const [user, setUser] = useState()\\n  function fetchUser() {\\n    fetch('/api/user')\\n      .then((response) => response.json())\\n      .then((state) => setUser(state))\\n  }\\n  return (\\n    <>\\n      <Button onClick={fetchUser}>Fetch User Data</Button>\\n      {user && (\\n        <List>\\n          <ListItem>\\n            <strong>ID:</strong> {user.id}\\n          </ListItem>\\n          <ListItem>\\n            <strong>Name:</strong> {user.display_name}\\n          </ListItem>\\n          <ListItem>\\n            <strong>Email:</strong> {user.email}\\n          </ListItem>\\n          <ListItem>\\n            <strong>Home Space:</strong> {user.home_space_id}\\n          </ListItem>\\n          <ListItem>\\n            <strong>Role IDs:</strong> {JSON.stringify(user.role_ids)}\\n          </ListItem>\\n        </List>\\n      )}\\n    </>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Data Fetching"},"tableOfContents":{"items":[{"url":"#proxy-configuration","title":"Proxy Configuration"}]}}},"pageContext":{"id":"a6400ea5-7cf5-592d-8e63-bdb71d2a3b39"}}}