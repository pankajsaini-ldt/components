{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/content/divider/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"27db9730-2582-50b1-924b-fb8ddeb0139c","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Divider\",\n  \"github\": \"Divider\",\n  \"figma\": \"file/FJdRcUtLJ6RVIcPS1CL5dwwQ/Borders-and-Dividers?node-id=7%3A10\",\n  \"propsOf\": \"Divider\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Dividers accept all the spacing props from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Box />\"), \", which gives you the ability to easily put spacing around your dividers. By default a divider's background color will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"charcoal300\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Space around>\\n  <Box bg=\\\"white\\\" p=\\\"xlarge\\\">\\n    On White\\n    <Divider mt=\\\"medium\\\" />\\n  </Box>\\n  <Box bg=\\\"ui1\\\" p=\\\"xlarge\\\">\\n    On `ui1`\\n    <Divider mt=\\\"medium\\\" />\\n  </Box>\\n  <Box bg=\\\"ui2\\\" p=\\\"xlarge\\\">\\n    On `ui2`\\n    <Divider mt=\\\"medium\\\" />\\n  </Box>\\n</Space>\\n\")), mdx(\"h2\", null, \"Divider Appearance\"), mdx(\"p\", null, \"There are three divider appearances \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"light\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dark\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onDark\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Space around>\\n  <Box bg=\\\"white \\\" p=\\\"xlarge\\\">\\n    light appearance\\n    <Divider mt=\\\"medium\\\" appearance=\\\"light\\\" />\\n  </Box>\\n  <Box bg=\\\"ui1\\\" p=\\\"xlarge\\\">\\n    dark appearance\\n    <Divider mt=\\\"medium\\\" appearance=\\\"dark\\\" />\\n  </Box>\\n  <Box bg=\\\"ui5\\\" p=\\\"xlarge\\\">\\n    onDark appearance\\n    <Divider mt=\\\"medium\\\" appearance=\\\"onDark\\\" />\\n  </Box>\\n</Space>\\n\")), mdx(\"h2\", null, \"Custom Divider\"), mdx(\"p\", null, \"You can adjust the dividers height and supply a custom color if needed\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"  Custom Divider\\n  <Divider size=\\\"8px\\\" customColor=\\\"turquoise\\\" mt=\\\"large\\\" borderRadius=\\\"100px\\\" />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"figma":"file/FJdRcUtLJ6RVIcPS1CL5dwwQ/Borders-and-Dividers?node-id=7%3A10","github":"Divider","propsOf":"Divider","status":null,"title":"Divider"},"tableOfContents":{"items":[{"url":"#divider-appearance","title":"Divider Appearance"},{"url":"#custom-divider","title":"Custom Divider"}]}}},"pageContext":{"id":"27db9730-2582-50b1-924b-fb8ddeb0139c"}}}