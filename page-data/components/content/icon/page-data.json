{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/content/icon/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"1b4a3631-beab-54fa-ad82-5e57df03776d","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Icon\",\n  \"figma\": \"file/Dirjx0RKbOOrLacqHq61By/Button-%26-Links?node-id=914%3A981&viewport=1741%2C951%2C1\",\n  \"propsOf\": \"Icon\",\n  \"github\": \"Icon\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To use an Icon you pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" of the icon to the name property on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Icon />\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Icon name=\\\"Check\\\" size={24} />\\n<Icon name=\\\"Favorite\\\" size={24} color=\\\"critical\\\" />\\n<Icon name=\\\"GearOutline\\\" size={32} color=\\\"neutral />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Icon name=\\\"Trash\\\" />\\n\")), mdx(\"p\", null, \"By default, icons inherit the text color of the component they are embedded\\nwithin and can be sized using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" property:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Box\\n  color=\\\"critical\\\"\\n  bg=\\\"ui5\\\"\\n  p=\\\"large\\\"\\n  width=\\\"210px\\\"\\n  display=\\\"flex\\\"\\n  flexDirection=\\\"column\\\"\\n  borderRadius=\\\"medium\\\"\\n>\\n  The text in this Box is red and so is the icon.\\n  <Icon name=\\\"Trash\\\" size=\\\"32px\\\" mx=\\\"auto\\\" />\\n</Box>\\n\")), mdx(\"p\", null, \"Alternatively, Icon can have its own color property, when it's appropriate to\\nbreak the relationship between a container's text color and the icon color:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Box\\n  color=\\\"critical\\\"\\n  bg=\\\"ui5\\\"\\n  p=\\\"large\\\"\\n  display=\\\"flex\\\"\\n  width=\\\"210px\\\"\\n  flexDirection=\\\"column\\\"\\n  borderRadius=\\\"medium\\\"\\n>\\n  The text in this Box is red, but the Icon is purple.\\n  <Icon color=\\\"key\\\" name=\\\"Trash\\\" size=\\\"32px\\\" mx=\\\"auto\\\" />\\n</Box>\\n\")), mdx(\"h2\", null, \"Icon Library\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tip:\"), \" you can click an icon below to copy it to your clipboard.\"), mdx(IconList, {\n    mdxType: \"IconList\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"figma":"file/Dirjx0RKbOOrLacqHq61By/Button-%26-Links?node-id=914%3A981&viewport=1741%2C951%2C1","github":"Icon","propsOf":"Icon","status":null,"title":"Icon"},"tableOfContents":{"items":[{"url":"#icon-library","title":"Icon Library"}]}}},"pageContext":{"id":"1b4a3631-beab-54fa-ad82-5e57df03776d"}}}