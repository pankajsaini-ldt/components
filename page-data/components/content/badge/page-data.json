{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/content/badge/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"99bf148f-0e22-5ac4-897a-70c38fad4bbd","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Badge\",\n  \"propsOf\": \"Badge\",\n  \"github\": \"Badge\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Badge\"), \" is used for labeling elements with a message or status.\"), mdx(\"h2\", null, \"Badge Sizes\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Space around>\\n  <Badge size=\\\"small\\\">Small</Badge>\\n  <Badge size=\\\"medium\\\">Medium</Badge>\\n  <Badge size=\\\"large\\\">Large</Badge>\\n</Space>\\n\")), mdx(\"h2\", null, \"Badge Intent\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Space around>\\n  <Badge intent=\\\"plain\\\">Plain</Badge>\\n  <Badge intent=\\\"key\\\">Key</Badge>\\n  <Badge intent=\\\"positive\\\">Positive</Badge>\\n  <Badge intent=\\\"inform\\\">Inform</Badge>\\n  <Badge intent=\\\"neutral\\\">Neutral</Badge>\\n  <Badge intent=\\\"warn\\\">Warn</Badge>\\n  <Badge intent=\\\"critical\\\">Critical</Badge>\\n</Space>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"figma":null,"github":"Badge","propsOf":"Badge","status":null,"title":"Badge"},"tableOfContents":{"items":[{"url":"#badge-sizes","title":"Badge Sizes"},{"url":"#badge-intent","title":"Badge Intent"}]}}},"pageContext":{"id":"99bf148f-0e22-5ac4-897a-70c38fad4bbd"}}}